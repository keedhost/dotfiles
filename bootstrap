#!/bin/bash

### By Andrii Kondratiev ###

PACKAGES="git zsh vim fzf python3-pip tshark tcpdump wireshark neofetch"

# Colors
end="\033[0m"
red="\033[0;31m"
green="\033[0;32m"
yellow="\033[0;33m"

function info {
    echo -e "${green}=== ${1} === ${end}"
}

function error {
    echo -e "${red}=== ${1} === ${end}"
}

function warn {
    echo -e "${yellow}=== ${1} === ${end}"
}

### Ask before replace the configurations
if [[ $1 = "--noask" ]]; then
    info "Runs in quiet mode"
else
	while true; do
	    read -p "This script will remove your current settings for zhs and vim. Do it? (yes/no) " yn
	    case $yn in 
		yes ) info "OK, we will proceed";
		break;;
		no ) info "Exiting...";
			exit 0;;
		* ) info "Only \"yes\" or \"no\" accepts";;
	    esac
	done
fi

function check_git_access {
    info "Check if I have access to my GitHub private repos..."
    ssh -q git@github.com 1> /dev/null 2>& 1
    if [ $? -eq 1 ] ; then
	    info "SSH connection to git established"
        info "Using \"git@github.com:keedhost\" as url"
        git_url="git@github.com:keedhost"
    else
	    warn "Coul'd not connect to the GitHub private repos."
	    info "Possible solutions:"
	    info "1. Check internet connections"
	    info "2. Check that SSH keys installed"
	    info "3. Check SSH keys permissions:"
    	info "\t chown -R $USER. ~/.ssh"
	    info "\t chmod 700 ~/.ssh"
    	info "\t chmod 600 ~/.ssh/*"
	    info "\t chmod 644 ~/.ssh/*.pub"
	    info "---------------------------------"
        info "Using \"https://github.com/keedhost\" as url"
        git_url="https://github.com/keedhost"
    fi
}

check_git_access

install_package () {
	OS="`uname`"
	case $OS in
	  	'Linux')
	    	OS='Linux'
	    	if [ -f /etc/redhat-release ]; then
               	Distro='RedHat'
	           	info "Found $Distro $OS."
		       	sudo dnf install -y $1
    		elif [ -f /etc/SuSE-release ]; then
            	Distro='SuSe'
	            info "Found $Distro $OS."
		    	sudo yum install -y $1
    		elif [ -f /etc/debian_version ]; then
            	Distro='Debian'
	            info "Found $Distro $OS."
			info "Check that docker repo exists..."
			[ ! -f /etc/apt/sources.list.d/docker.list ] || \
				info "Docker repo does not exists. Adding..."; \
				sudo rm -v /etc/apt/keyrings/docker.gpg
				echo \
  					"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  					$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
			sudo mkdir -p /etc/apt/keyrings && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
			sudo chmod a+r /etc/apt/keyrings/docker.gpg
			sudo apt update
			sudo apt install -y $1
			sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
			sudo usermod -aG docker $USER
			mkdir -p ~/.local/share/fonts
			cd ~/.local/share/fonts && curl -fLo "Droid Sans Mono for Powerline Nerd Font Complete.otf" https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/DroidSansMono/complete/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf
			neofetch
    		fi
	    	;;
	  	'FreeBSD')
	    	OS='FreeBSD'
	    	info "Found $OS"
	    	su -c "pkg install $1"
	    	;;
	  	'WindowsNT')
	    	OS='Windows'
	    	warn "Found $OS"
	    	error "Currently not supported by script"
	    	exit 2
	    	;;
	  	'Darwin') 
	    	OS='macOS'
	    	info "Found $OS"
	    	brew install $1
		cd ~/Library/Fonts && \
		curl -fLo "Droid Sans Mono for Powerline Nerd Font Complete.otf" \
			https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/DroidSansMono/complete/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf
	    	;;
	  	'SunOS')
	    	OS='Solaris'
	    	warn "Found $OS"
	    	error "Currently not supported by script"
	    	exit 2
	    ;;
	  	*)
			error "Unknown operation system. Exiting..."
			exit 3
		;;
	esac
}

install_packages $PACKAGES

info "Start installing config files"
info "Installing vim config"
mv -v ~/.vim ~/.vim-$(date +%d-%m-%Y-at-%H-%m)
rm -Rfv ~/.vim
git clone ${git_url}/vim.git ~/.vim
git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
ln -sf ~/.vim/vimrc ~/.vimrc

# Install vim plugins from terminal
# vim +'PlugInstall --sync' +qa
# vim +PluginInstall +qall

# Install vim plugins from CI
vim -E -s -u "$HOME/.vimrc" +PluginInstall +qall
vim -E -s -u "$HOME/.vimrc" "PlugInstall --sync" +qa

info "Installing zsh config"
mv -v ~/.zsh ~/.zsh-$(date +%d-%m-%Y-at-%H-%m)
git clone --recurse-submodules ${git_url}/zsh.git ~/.zsh --recursive --progress  --remote
ln -sf ~/.zsh/zshrc ~/.zshrc
python3 -m pip install thefuck
